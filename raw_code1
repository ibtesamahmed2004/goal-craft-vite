import { useState, useEffect } from 'react'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'
import Navbar from './components/Navbar'
// import { use } from 'react'
import { v4 as uuidv4 } from 'uuid';
import { FaEdit } from "react-icons/fa";
import { MdDelete } from "react-icons/md";


function App() {

  const [todo, setTodo] = useState("")
  const [todos, setTodos] = useState([])
  const [showFinished, setshowFinished,] = useState(true)

  useEffect(() => {
    let todoString =localStorage.getItem("todos")
    if(todoString) {
      let todos = JSON.parse(localStorage.getItem("todos"))
      setTodos(todos)

    }
    
  }, [])
  

  const saveToLS = () => {
    localStorage.setItem("todos", JSON.stringify(todos))
  }


  const toggleFinished = (e) => {
    setshowFinished(!showFinished)
    
  }
  

  const handleEdit = (e, id) => {
    let t = todos.filter(i=>i.id === id)
    setTodo(t[0].todo)

    let newTodos = todos.filter(item=> {
      return item.id!==id
    });
    
    setTodos(newTodos)
    saveToLS()
    

  }

  const handleDelete = (e, id) => {

 
    let newTodos = todos.filter(item=> {
      return item.id!==id
    });
    
    setTodos(newTodos)
    saveToLS()
    

  }

  const handleAdd = () => {
    setTodos([...todos, {id:uuidv4(), todo, isCompleted: false }])
    setTodo("")
    saveToLS()


  }

  const handleChange = (e) => {
    setTodo(e.target.value)
  }

  const handleCheckbox = (e) => {
    let id =  e.target.name;
    let index = todos.findIndex(item=> {
      return item.id===id;
    })

    let newTodos = [...todos];
    newTodos[index].isCompleted = !newTodos[index].isCompleted;
    setTodos(newTodos)
    saveToLS()
  }
  

  return (
    <>
      <Navbar />
      <div className="mx-3 md:container md:mx-auto my-3 p-5 rounded-xl bg-cyan-600 min-h-screen md:w-3/4">
      <h1 className='font-bold text-center text-xl'>Goal Craft - Manage all your Goals at one place</h1>
        <div className="addTodo my-5 flex flex-col gap-2">
          <h2 className='text-lg font-bold'>Add your Goals</h2>

          <div className='flex'>
            
          </div>
          <input onChange={handleChange} value={todo} type='text' className='w-full rounded-full px-5 py-1' />
          <button onClick={handleAdd} disabled={todo.length<=3} className='bg-violet-700 hover:bg-gray-600 disabled:bg-pink-400 p-2 py-1 text-sm font-bold text-white rounded-md mx-1 '>Add Goal</button>

        </div>
        <input className='my-2' onChange={toggleFinished} type='checkbox' checked={showFinished} /> Show Finished
        <h2 className='text-lg font-bold my-6 mb-2'>Your Goals</h2>
        <div className="todos">
          {todos.length === 0 && <div className='text-gray-900 m-5'>No Goals to display</div>}
          {todos.map(item => {


            return (showFinished || !item.isCompleted) && <div key={item.id} className="todo flex md:w-1/4 my-3 justify-between">
              <div className='flex gap-5'>
                <input name={item.id} onChange={handleCheckbox} type='checkbox' checked={item.isCompleted} id='' />
              </div>
              <div className={item.isCompleted?"line-through":""} >{item.todo}</div>
              <div className="buttons flex h-full">
                <button onClick={(e)=> handleEdit(e, item.id)} className='bg-violet-700 hover:bg-gray-600 p-2 py-1 text-sm font-bold text-white rounded-md mx-1'><FaEdit /></button>
                <button onClick={(e)=>{handleDelete(e, item.id)}} className='bg-violet-700 hover:bg-gray-600 p-2 py-1 text-sm font-bold text-white rounded-md mx-1'><MdDelete /></button>
              </div>
            </div>

          })}

        </div>

      </div>
    </>
  )
}

export default App
